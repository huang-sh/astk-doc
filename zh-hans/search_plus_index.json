{"./":{"url":"./","title":"介绍","keywords":"","body":"介绍 可变剪切(Alternative splicing, AS) 普遍存在于生物体内， 是控制着基因组部分区域能否表达的一个重要机制，是蛋白组多样性产生的重要原因。高通量测序技术的发展促进可变剪切的广泛研究。然而，当前AS分析软件通常只关注于一两个层面，缺乏一个AS分析的全面而灵活的分析流程。在如今每天都产生和积累大量数据的组学时代，这不利于AS机制的综合性分析。因此，我们开发ASTK，希望能促进AS事件的功能表征，提高我们对剪接调控的理解。 ASTK是一个综合性可变剪切分析工具包，整合了当前流行和强大的软件， 用于对可变剪切多个层面进行个性化分析。当前可进行以下分析： 剪切位点强度、exon/intron GC含量长度等序列特征 不同条件/类型AS事件分布分析，exon长度聚类 AS事件PSI/dPSI分析 差异AS事件分析 AS事件基因功能富集分析 剪切因子motif分析 剪切位点表观信号分析 "},"part0/Installation.html":{"url":"part0/Installation.html","title":"安装","keywords":"","body":"安装 ASTK 只适用于Linux 系统，如果需要在Window 系统使用，可以在Window上安装WSL 或者虚拟机。 常规安装 首先，利用conda 为astk创建一个虚拟环境，虽然这不是必须的，但是建议这样做。 ## 创建一个新环境名为askt, 同时安装 Python 和 R $ conda create -n astk -c conda-forge r-base=4.1 python=3.8 -y ## 激活环境 astk $ conda activate astk ## 安装两个依赖软件 $ conda create -n astk -c bioconda bedtools meme -y 从PyPi安装astk（当前不要使用该安装方式!） ## install the development version from github $ pip install astk 或者从github安装astk ## install the development version from github $ pip install git+https://github.com/huang-sh/astk.git@dev 安装完astk后， 还需要安装一些依赖的R包， 建议配置一下特定的 R 执行路径，如果该R 已经安装了许多R 包，这会节省许多时间和资源。 这是一个例子， 你可以在你机器上配置合适的R路径。 $ conda activate R41 $ which R ~/software/anaconda/envs/R41/bin/R astk 配置指定R. astk config -R ~/software/anaconda/envs/R41/bin/R 这不是必须的，如果你的机器上没有合适的R，可以不用配置 之后，可以利用该行代码来安装依赖的R包，astk 会根据之前设置的R 来下载相应的依赖包，如果已存在就不会重复安装。所以对于一个已经安装了许多软件的R 而言，这会节省不少时间。如果之前未配置 R 路径，astk 会使用当前环境下的R。 $ astk install -r ... 安装过程中，有些R包会安装失败， 可以尝试使用conda 来进行安装 Docker 安装 如果你机器上可以使用Docker, 那直接使用Docker 来安装软件会节省不少时间。 $ docker pull huangshing/astk astk docker usage 这里介绍一下如何使用docker 版的 astk 首先利用命令 alias 创建一个别名 $ alias astkdocker=\"docker run --rm -v /home/test/project:/project -e MY_USER=$(id -u) huangshing/astk\" 其中将 /home/test/project 替换成你机器上的路径， 该路径下应该存放着，你需要分析的所有数据文件和参考文件等。 然后这样调用 astk $ astkdocker astk meta -h Usage: astk meta [OPTIONS] generate metadata template file Options: -c1, --ctrl PATH file path for condtion 1 [required] -c2, --case PATH file path for condtion 2 [required] -gn, --groupName TEXT group name -repN, --replicate INTEGER replicate, number -o, --output PATH metadata output path [required] -repN1, --replicate1 INTEGER replicate1, number -repN2, --replicate2 INTEGER replicate2, number --condition TEXT condition name -fn, --filename file name --split TEXT name split symbol and index -h, --help Show this message and exit. "},"part0/0_meta.html":{"url":"part0/0_meta.html","title":"准备","keywords":"","body":"Preparation 转录本定量 astk 的输入为转录本的TPM定量文件。转录本的TPM定量文件可以通过salmon获取. 参考教程 示例代码： $ salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode $ salmon quant -i salmon_index --gcBias --useVBOpt --seqBias -r ENCFF329ACL.fastq.gz --validateMappings -o fb_e11.5_rep1 -p 30 $ ls fb_e11.5_rep1 aux_info cmd_info.json lib_format_counts.json libParams logs quant.sf 注： 对于来自GENCODE的数据 --gencode 必须加上 假设我们已经定量好了以下数据： $ ll data/quant | cut -d \" \" -f 5- 146 Oct 30 2021 fb_e11.5_rep1 146 Oct 30 2021 fb_e11.5_rep2 146 Oct 30 2021 fb_e12.5_rep1 146 Oct 30 2021 fb_e12.5_rep2 146 Oct 30 2021 fb_e13.5_rep1 146 Oct 30 2021 fb_e13.5_rep2 146 Oct 30 2021 fb_e14.5_rep1 146 Oct 30 2021 fb_e14.5_rep2 146 Oct 30 2021 fb_e15.5_rep1 146 Oct 30 2021 fb_e15.5_rep2 146 Oct 30 2021 fb_e16.5_rep1 146 Oct 30 2021 fb_e16.5_rep2 146 Oct 30 2021 fb_p0_rep1 146 Oct 30 2021 fb_p0_rep2 meta meta 是一个用于为差异可变剪切分析生成对照组和处理组的对照信息表格的一个子命令。 meta 参数设置如下： -o: 输出文件地址 -repN: 各组的重复样本数目 -c1: condition 1(ctrl) 样本转录本定量文件路径 -c2: condition 2(case) 样本转录本定量文件路径 -gn: 对照组名设置 例1 如果我们要生成以fb_e11.5 为控制组， 其他阶段数据为处理组，进行差异可变剪切分析，可以这样运行命令： $ mkdir metadata -p $ astk meta -o metadata/fb_e11_based -repN 2 \\ -c1 data/quant/fb_e11.5_rep*/quant.sf \\ -c2 data/quant/fb_e1[2-6].5_rep*/quant.sf data/quant/fb_p0_rep*/quant.sf \\ -gn fb_e11_12 fb_e11_13 fb_e11_14 fb_e11_15 fb_e11_16 fb_e11_p0 输出为一个CSV文件和JSON文件，CSV文件便于查看， JSON文件用于后续分析。 例2 如果我们要生成以相邻阶段分别为控制组和处理组，进行差异可变剪切分析，可以这样运行命令： $ mkdir metadata -p $ astk meta -o metadata/fb_adj_based -repN 2 \\ -c1 data/quant/fb_e1[1-6].5_rep*/quant.sf \\ -c2 data/quant/fb_e1[2-6].5_rep*/quant.sf data/quant/fb_p0_rep*/quant.sf \\ -gn fb_e11_12 fb_e12_13 fb_e13_14 fb_e14_15 fb_e15_16 fb_e16_p0 "}}